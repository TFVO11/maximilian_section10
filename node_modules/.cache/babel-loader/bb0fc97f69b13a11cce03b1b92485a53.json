{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cosmo\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\MaximilianProject\\\\maximilian_section10\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.valid,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  ;\n\n  if (action.type === 'USER_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  ;\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.valid,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  ;\n\n  if (action.type === 'USER_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  ;\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState(''); // const [emailIsValid, setEmailIsValid] = useState();\n\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  useEffect(() => {\n    console.log('EFFECT RUNNING!'); //clean up function\n\n    return () => {\n      console.log('EFFECT CLEAN UP!');\n    };\n  }, []); // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('checking form nalidity!');\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  //   //cleanup function: useEffect execute this function when next render. then cleanup fnt make it clear\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.trim().length > 6 && enteredEmail.includes('@'));\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(enteredEmail.includes('@'));\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"m76xJVh80neWOwQLSH6grlL9jPk=\");\n\n_c = Login;\nexport default Login; //we use useEffect that is operate on rerendering (button click)\n//so we cancel out setFormIsValid\n//add as dependencies, what  you'r using in this side effect function\n//&& is operate when two things is fullfill one && another one\n//in this component, useEffect is executed after [setFormIsValid, enteredEmail, enteredPassword] is changed\n//setTimeout is delay function \n//clearTimeout() is clear cleanup function\n//useReducer can update a state they are beloged before in App.js\n//useReducer는 안에 ftn을 넣을 수 있지만 가독성을 위해 그리고 다른 component들과 상호작용할 필요가 없기 때문에 밖으로 뺀다.\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","valid","isValid","val","includes","passwordReducer","trim","length","Login","props","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","console","log","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","emailIsValid","invalid","actions","btn"],"sources":["C:/Users/cosmo/OneDrive/바탕 화면/MaximilianProject/maximilian_section10/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.valid, isValid: action.val.includes('@') };\n  };\n  if (action.type === 'USER_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };\n  };\n  return { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.valid, isValid: action.val.trim().length > 6 };\n  };\n  if (action.type === 'USER_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  };\n  return { value: '', isValid: false };\n};\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, { \n      value: '',\n      isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, { \n    value: '',\n    isValid: null,\n});\n\n  useEffect(() => {\n\n    console.log('EFFECT RUNNING!');\n//clean up function\n    return () => {\n      console.log('EFFECT CLEAN UP!');\n    };\n\n  }, []);\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('checking form nalidity!');\n\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n    \n\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  //   //cleanup function: useEffect execute this function when next render. then cleanup fnt make it clear\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.isValid\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value})\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(enteredEmail.includes('@'));\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'INPUT_BLUR'})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n\n\n//we use useEffect that is operate on rerendering (button click)\n//so we cancel out setFormIsValid\n//add as dependencies, what  you'r using in this side effect function\n//&& is operate when two things is fullfill one && another one\n//in this component, useEffect is executed after [setFormIsValid, enteredEmail, enteredPassword] is changed\n//setTimeout is delay function \n//clearTimeout() is clear cleanup function\n//useReducer can update a state they are beloged before in App.js\n//useReducer는 안에 ftn을 넣을 수 있지만 가독성을 위해 그리고 다른 component들과 상호작용할 필요가 없기 때문에 밖으로 뺀다."],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAsD,OAAtD;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACtC,IAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;IAChC,OAAO;MAAEC,KAAK,EAAEF,MAAM,CAACG,KAAhB;MAAuBC,OAAO,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX,CAAoB,GAApB;IAAhC,CAAP;EACD;;EAAA;;EACD,IAAIN,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MAAEC,KAAK,EAAEH,KAAK,CAACG,KAAf;MAAsBE,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYI,QAAZ,CAAqB,GAArB;IAA/B,CAAP;EACD;;EAAA;EACD,OAAO;IAAEJ,KAAK,EAAE,EAAT;IAAaE,OAAO,EAAE;EAAtB,CAAP;AACD,CARD;;AAUA,MAAMG,eAAe,GAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;EACzC,IAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;IAChC,OAAO;MAAEC,KAAK,EAAEF,MAAM,CAACG,KAAhB;MAAuBC,OAAO,EAAEJ,MAAM,CAACK,GAAP,CAAWG,IAAX,GAAkBC,MAAlB,GAA2B;IAA3D,CAAP;EACD;;EAAA;;EACD,IAAIT,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MAAEC,KAAK,EAAEH,KAAK,CAACG,KAAf;MAAsBE,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYM,IAAZ,GAAmBC,MAAnB,GAA4B;IAA3D,CAAP;EACD;;EAAA;EACD,OAAO;IAAEP,KAAK,EAAE,EAAT;IAAaE,OAAO,EAAE;EAAtB,CAAP;AACD,CARD;;AAUA,MAAMM,KAAK,GAAIC,KAAD,IAAW;EAAA;;EACvB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,EAAD,CAAhD,CADuB,CAEvB;;EACA,MAAM,CAACsB,eAAD,EAAkBC,kBAAlB,IAAwCvB,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACwB,eAAD,EAAkBC,kBAAlB,IAAwCzB,QAAQ,EAAtD;EACA,MAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,KAAD,CAA9C;EAEA,MAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B3B,UAAU,CAACI,YAAD,EAAe;IACzDI,KAAK,EAAE,EADkD;IAEzDE,OAAO,EAAE;EAFgD,CAAf,CAA9C;EAKA,MAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoC7B,UAAU,CAACa,eAAD,EAAkB;IACpEL,KAAK,EAAE,EAD6D;IAEpEE,OAAO,EAAE;EAF2D,CAAlB,CAApD;EAKAX,SAAS,CAAC,MAAM;IAEd+B,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAFc,CAGlB;;IACI,OAAO,MAAM;MACXD,OAAO,CAACC,GAAR,CAAY,kBAAZ;IACD,CAFD;EAID,CARQ,EAQN,EARM,CAAT,CAjBuB,CA2BvB;EACA;EACA;EAEA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;IACpCN,aAAa,CAAC;MAACpB,IAAI,EAAE,YAAP;MAAqBI,GAAG,EAAEsB,KAAK,CAACC,MAAN,CAAa1B;IAAvC,CAAD,CAAb;IAEAiB,cAAc,CACZQ,KAAK,CAACC,MAAN,CAAa1B,KAAb,CAAmBI,QAAnB,CAA4B,GAA5B,KAAoCgB,aAAa,CAAClB,OADtC,CAAd;EAGD,CAND;;EAQA,MAAMyB,qBAAqB,GAAIF,KAAD,IAAW;IACvCJ,gBAAgB,CAAC;MAACtB,IAAI,EAAE,YAAP;MAAqBI,GAAG,EAAEsB,KAAK,CAACC,MAAN,CAAa1B;IAAvC,CAAD,CAAhB;IAEAiB,cAAc,CACZQ,KAAK,CAACC,MAAN,CAAa1B,KAAb,CAAmBM,IAAnB,GAA0BC,MAA1B,GAAmC,CAAnC,IAAwCG,YAAY,CAACN,QAAb,CAAsB,GAAtB,CAD5B,CAAd;EAGD,CAND;;EAQA,MAAMwB,oBAAoB,GAAG,MAAM;IACjC;IACAT,aAAa,CAAC;MAACpB,IAAI,EAAE;IAAP,CAAD,CAAb;EACD,CAHD;;EAKA,MAAM8B,uBAAuB,GAAG,MAAM;IACpCR,gBAAgB,CAAC;MAACtB,IAAI,EAAE;IAAP,CAAD,CAAhB;EACD,CAFD;;EAIA,MAAM+B,aAAa,GAAIL,KAAD,IAAW;IAC/BA,KAAK,CAACM,cAAN;IACAtB,KAAK,CAACuB,OAAN,CAActB,YAAd,EAA4BE,eAA5B;EACD,CAHD;;EAKA,oBACE,QAAC,IAAD;IAAM,SAAS,EAAElB,OAAO,CAACuC,KAAzB;IAAA,uBACE;MAAM,QAAQ,EAAEH,aAAhB;MAAA,wBACE;QACE,SAAS,EAAG,GAAEpC,OAAO,CAACwC,OAAQ,IAC5BC,YAAY,KAAK,KAAjB,GAAyBzC,OAAO,CAAC0C,OAAjC,GAA2C,EAC5C,EAHH;QAAA,wBAKE;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UACE,IAAI,EAAC,OADP;UAEE,EAAE,EAAC,OAFL;UAGE,KAAK,EAAE1B,YAHT;UAIE,QAAQ,EAAEc,kBAJZ;UAKE,MAAM,EAAEI;QALV;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAeE;QACE,SAAS,EAAG,GAAElC,OAAO,CAACwC,OAAQ,IAC5BpB,eAAe,KAAK,KAApB,GAA4BpB,OAAO,CAAC0C,OAApC,GAA8C,EAC/C,EAHH;QAAA,wBAKE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UACE,IAAI,EAAC,UADP;UAEE,EAAE,EAAC,UAFL;UAGE,KAAK,EAAExB,eAHT;UAIE,QAAQ,EAAEe,qBAJZ;UAKE,MAAM,EAAEE;QALV;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QAfF,eA6BE;QAAK,SAAS,EAAEnC,OAAO,CAAC2C,OAAxB;QAAA,uBACE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAsB,SAAS,EAAE3C,OAAO,CAAC4C,GAAzC;UAA8C,QAAQ,EAAE,CAACtB,WAAzD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QA7BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuCD,CAjHD;;GAAMR,K;;KAAAA,K;AAmHN,eAAeA,KAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}